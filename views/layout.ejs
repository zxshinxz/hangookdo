<!DOCTYPE html>
<html>
	<head>
		<title>Hapkido Hangookdo</title>
		<link rel="icon" href="/images/logo.ico" type="image/x-icon">
		<!-- Viewport mobile tag for sensible mobile support -->
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

		<!--
		Stylesheets and Preprocessors
		==============================

		You can always bring in CSS files manually with `<link>` tags, or asynchronously
		using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
		of Sails' conventional asset pipeline (boilerplate Gruntfile).

		By default, stylesheets from your `assets/linker/styles` folder are included
		here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
		are supported. In production, your styles will be minified and concatenated into
		a single file.

		To customize any part of the built-in behavior, just edit your Gruntfile.
		For example, here are a few things you could do:

		+ Change the order of your CSS files
		+ Import stylesheets from other directories
		+ Use a different or additional preprocessor, like SASS, SCSS or Stylus
		-->
		<!--STYLES-->
		<link rel="stylesheet" href="/min/production.min.css">
		<!--STYLES END-->
		<!--SCRIPTS-->
		<script src="/min/production.min.js"></script>
		<script src="/min/productionapp.min.js"></script>
		<!--SCRIPTS END-->
	</head>

	<body >
		<%- body %>

		<!--
		Client-side Templates
		========================

		HTML templates are important prerequisites of modern, rich client applications.
		To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
		that you load these templates client-side.

		By default, your Gruntfile is configured to automatically load and precompile
		client-side JST templates in your `assets/linker/templates` folder, then
		include them here automatically (between TEMPLATES and TEMPLATES END).

		To customize this behavior to fit your needs, just edit your Gruntfile.
		For example, here are a few things you could do:

		+ Import templates from other directories
		+ Use a different template engine (handlebars, jade, dust, etc.)
		+ Internationalize your client-side templates using a server-side
		stringfile before they're served.
		-->

		<!--TEMPLATES-->
		<script type="text/javascript" src="/jst.js"></script>
		<!--TEMPLATES END-->

		<!--

		Client-side Javascript
		========================

		You can always bring in JS files manually with `script` tags, or asynchronously
		on the client using a solution like AMD (RequireJS).  Or, if you like, you can
		take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

		By default, filesin your `assets/linker/js` folder are included here
		automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
		CoffeeScript (.coffee) are supported. In production, your scripts will be minified
		and concatenated into a single file.

		To customize any part of the built-in behavior, just edit your Gruntfile.
		For example, here are a few things you could do:

		+ Change the order of your scripts
		+ Import scripts from other directories
		+ Use a different preprocessor, like TypeScript

		-->

		<!--
		<script src="/javascript/es5-shim/es5-shim.js"></script>
		<script src="/javascript/jquery/dist/jquery.js"></script>
		<script src="/javascript/angular/angular.js"></script>
		<script src="/javascript/bootstrap/dist/js/bootstrap.js"></script>
		<script src="/javascript/angular-bootstrap/ui-bootstrap-tpls.js"></script>
		<script src="/javascript/tween-max/TimelineMax.min.js"></script>
		<script src="/javascript/tween-max/TweenMax.min.js"></script>
		<script src="/javascript/angular/angular-animate.js"></script>
		<script src="/javascript/angular/angular-cookies.js"></script>
		<script src="/javascript/angular/angular-resource.js"></script>
		<script src="/javascript/angular/angular-route.js"></script>
		<script src="/javascript/angular/angular-sanitize.js"></script>
		<script src="/javascript/angular/angular-touch.js"></script>
		<script src="/javascript/angular-file-upload/angular-file-upload.js"></script>
		<script src="/javascript/app.js"></script>
		<script src="/javascript/hangookdo/Controllers/HangookdoController.js"></script>
		<script src="/javascript/hangookdo/Services/HangookdoService.js"></script>
		<script src="/javascript/hangookdo/Directives/HangookdoDirective.js"></script>
		-->

	</body>
</html>
